AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  http-api

  Sample SAM Template for http-api

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Handler: app.lambda_handler
    Runtime: python3.8

Parameters:
  AppName:
    Type: String
    Description: Student Info
  ClientDomains:
    Type: CommaDelimitedList
    Description: Array of domains allowed to use this User Pool
  StudentEmail:
    Type: String
    Description: Email address for student
  AddGroupsToScopes:
    Type: String
    AllowedValues: 
      - 'true'
      - 'false'
    Default: 'false' 

Resources:  

  MyLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      # Description: Base Layer for python apps
      ContentUri: layers
      CompatibleRuntimes:
        - python3.8  

  StudentTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: students
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
    
  StudentApi:
    Type: AWS::Serverless::Api
    Properties:
        StageName: Prod
        Cors: "'*'"
        # Cors:
        #   AllowMethods: "'*'"
        #   AllowHeaders: "'*'"
        #   AllowOrigin: "'*'"
          
        Auth:
          DefaultAuthorizer: MyCognitoAuth # OPTIONAL
          Authorizers:
            MyCognitoAuth:
              # Can also accept an array
              UserPoolArn: !GetAtt CognitoUserPool.Arn 
              # Identity: # OPTIONAL
              #   # OPTIONAL; 
              #   Default: 'Authorization'
                # Header: MyAuthorizationHeader 
                # OPTIONAL
                # ValidationExpression: myAuthValidationExp

  StudentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: students/
      # Handler: app.lambda_hihandler
      # Runtime: python3.6
      Policies: 
        - AmazonDynamoDBFullAccess
        - AmazonSNSFullAccess
        - AmazonCognitoPowerUser
        # - DynamoDBCrudPolicy:
        #     TableName:
        #       !Ref StudentTable
      Events:
        
        ListStudents:
          Type: Api
          Properties:
            Path: /students
            Method: get
            RestApiId: !Ref StudentApi
            # Auth:
            #   Authorizer: 'NONE'
        
        PutStudent:
          Type: Api
          Properties:
            Path: /students
            Method: post
            RestApiId: !Ref StudentApi
            # Auth:
            #   Authorizer: 'NONE'
        
        PatchStudent:
          Type: Api
          Properties:
            Path: /students
            Method: patch
            RestApiId: !Ref StudentApi
            # Auth:
            #   Authorizer: MyCognitoAuth
        
        # DeleteStudent:
        #   Type: Api
        #   Properties:
        #     Path: /students/{id}/
        #     Method: delete      
  
  UserRegistrationFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: user/
      Handler: app.user_registration
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
      # Layers:
      #   - !Ref Layer
      Policies: 
        - AmazonDynamoDBFullAccess
        # - AmazonSNSFullAccess
        - AmazonCognitoPowerUser
      # Runtime: python3.8
      Events:
        UserRegistration:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /user/signup
            Method: post
            RestApiId: !Ref StudentApi
            Auth:
              Authorizer: 'NONE'
  
  UserRegistrationConfirmFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: user/
      Handler: app.signup_confirm
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
      # Layers:
      #   - !Ref Layer
      Policies: 
        - AmazonDynamoDBFullAccess
        # - AmazonSNSFullAccess
        - AmazonCognitoPowerUser
      # Runtime: python3.8
      Events:
        UserRegistrationConfirm:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /user/signup-confirm
            Method: post
            RestApiId: !Ref StudentApi
            Auth:
              Authorizer: 'NONE'
  
  UserLoginFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: user/
      Handler: app.user_login
      Layers:
        - !Ref MyLayer
      Policies: AmazonCognitoPowerUser
      Events:
        GetUser:
          Type: Api
          Properties:
            Path: /user/login/
            Method: post
            RestApiId: !Ref StudentApi
            Auth:
              Authorizer: 'NONE'

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${AppName}-UserPool
      Policies:
        PasswordPolicy:
          MinimumLength: 8          
      UsernameAttributes: 
        - email
      AutoVerifiedAttributes: 
        - email 
      # EmailConfiguration:
      #   EmailSendingAccount: DEVELOPER
      #   ReplyToEmailAddress: noreply@example.com
      #   SourceArn: arn:aws:cognito-idp:us-west-2:618758721119:userpool/us-west-2_YAaIaRMeE
      #   From: Papel <papel@aws.com>
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: Dear User, your verification code is {####}. Please use this code to confirm your account
        EmailSubject: OPT
        

      Schema:
        - AttributeDataType: String
          Name: email
          Required: false       
           
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: !Sub ${AppName}-UserPoolClient
      GenerateSecret: false  


Outputs: 

  UserPoolId:
    Description: "The Id for the user pool"
    Value: !Ref CognitoUserPool
    Export:
      Name: !Sub ${AppName}:UserPoolId

  UserPoolClientId:
    Description: "App Client Id"
    Value: !Ref CognitoUserPoolClient

#   AuthUrl:
#     Description: "Url based Auth"
#     Value: !Sub https://${UserPoolDomain}.auth.${AWS::Region}.amazoncognito.com

  StudentApi:
    Description: "API Gateway endpoint URL for Prod stage for Student function"
    Value: !Sub "https://${StudentApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  StudentFunction:
    Description: "Student Lambda Function ARN"
    Value: !GetAtt StudentFunction.Arn
  StudentFunctionIamRole:
    Description: "Implicit IAM Role created for Student function"
    Value: !GetAtt StudentFunctionRole.Arn
